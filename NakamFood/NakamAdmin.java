/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NakamFood;

import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dbss014
 */
public class NakamAdmin extends javax.swing.JFrame {

    static String url
            = "jdbc:sqlserver://localhost:1433;databaseName=nakam_food;integratedSecurity=true";

    /**
     * Creates new form NakamAdmin
     */
    public NakamAdmin() {
        initComponents();
        JOptionPane.showMessageDialog(null, "Selamat Datang di Admin panel!");
        try {
            isiDataPelanggan(this.getConnection(url));
            isiDataDriver(this.getConnection(url));
            isiDataRestoran(this.getConnection(url));
            isiDataProduk(this.getConnection(url));
            isiDataKategori(this.getConnection(url));
            isiDataOrder(this.getConnection(url));
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * periksa teks2 dalam field.
     *
     *
     */
    public boolean periksaMasukanPelanggan() {
        if (jtxtCustTelp.getText().equals("") || jtxtCustDepan.getText().equals("")
                || jtxtCustBelakang.getText().equals("") || jtxtCustSurel.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Terdapat 1 atau lebih data yang kosong!");
            return false;
        } else {
            return true;
        }
    }

    public boolean periksaMasukanDriver() {
        if (jtxtDriverTelp.getText().equals("") || jtxtDriverDepan.getText().equals("")
                || jtxtDriverBelakang.getText().equals("") || jtxtDriverPlat.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Terdapat 1 atau lebih data yang kosong!");
            return false;
        } else {
            return true;
        }
    }

    public boolean periksaMasukanRestoran() {
        if (jtxtRestoNama.getText().equals("") || jtxtRestoAlamat.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Terdapat 1 atau lebih data yang kosong!");
            return false;
        } else {
            return true;
        }
    }

    public boolean periksaMasukanProduk() {
        if (jtxtProdukDeskripsi.getText().equals("") || jtxtProdukKategori.getText().equals("") || jtxtProdukHarga.getText().equals("") || jtxtProdukNama.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Terdapat 1 atau lebih data yang kosong!");
            return false;
        } else {
            return true;
        }
    }

    public boolean periksaMasukanKategori() {
        if (jtxtKategoriKategori.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Terdapat 1 atau lebih data yang kosong!");
            return false;
        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPelanggan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtCustDepan = new javax.swing.JTextField();
        jtxtCustTengah = new javax.swing.JTextField();
        jtxtCustBelakang = new javax.swing.JTextField();
        jtxtCustSurel = new javax.swing.JTextField();
        jbtCustSunting = new javax.swing.JButton();
        jbtCustTambah = new javax.swing.JButton();
        jbtCustHapus = new javax.swing.JButton();
        jtxtCustTelp = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelDriver = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jbtDriverSunting = new javax.swing.JButton();
        jbtDriverTambah = new javax.swing.JButton();
        jbtDriverHapus = new javax.swing.JButton();
        jtxtDriverTelp = new javax.swing.JTextField();
        jtxtDriverPlat = new javax.swing.JTextField();
        jtxtDriverDepan = new javax.swing.JTextField();
        jtxtDriverTengah = new javax.swing.JTextField();
        jtxtDriverBelakang = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelRestoran = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jtxtRestoNama = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtxtRestoAlamat = new javax.swing.JTextArea();
        jbtRestoSunting = new javax.swing.JButton();
        jbtRestoTambah = new javax.swing.JButton();
        jbtRestoHapus = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelProduk = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jtxtProdukDeskripsi = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtxtProdukKategori = new javax.swing.JTextField();
        jtxtProdukHarga = new javax.swing.JTextField();
        jtxtProdukNama = new javax.swing.JTextField();
        jbtProdukSunting = new javax.swing.JButton();
        jbtProdukTambah = new javax.swing.JButton();
        jbtProdukHapus = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelKategori = new javax.swing.JTable();
        jbtKategoriTambah = new javax.swing.JButton();
        jbtKategoriHapus = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jtxtKategoriKategori = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabelOrder = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jtxtOrderTempat = new javax.swing.JTextField();
        jbtOrderDelete = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jbtQuery1 = new javax.swing.JButton();
        jbtQuery2 = new javax.swing.JButton();
        jbtQuery3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 255, 0));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Keluar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 102, 255));
        jLabel14.setText("Admin Panel");

        jTabbedPane.setBackground(new java.awt.Color(0, 204, 255));
        jTabbedPane.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tabelPelanggan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelPelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Telepon", "Nama Depan", "Inisial", "Nama Belakang", "Surel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelPelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPelangganMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelPelanggan);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Telepon:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nama:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Surel:");

        jtxtCustDepan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jtxtCustTengah.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jtxtCustBelakang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jtxtCustSurel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jbtCustSunting.setBackground(new java.awt.Color(255, 204, 0));
        jbtCustSunting.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtCustSunting.setForeground(new java.awt.Color(255, 255, 255));
        jbtCustSunting.setText("SUNTING");
        jbtCustSunting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCustSuntingActionPerformed(evt);
            }
        });

        jbtCustTambah.setBackground(new java.awt.Color(51, 255, 0));
        jbtCustTambah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtCustTambah.setForeground(new java.awt.Color(255, 255, 255));
        jbtCustTambah.setText("TAMBAH");
        jbtCustTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCustTambahActionPerformed(evt);
            }
        });

        jbtCustHapus.setBackground(new java.awt.Color(255, 0, 0));
        jbtCustHapus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtCustHapus.setForeground(new java.awt.Color(255, 255, 255));
        jbtCustHapus.setText("HAPUS");
        jbtCustHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCustHapusActionPerformed(evt);
            }
        });

        jtxtCustTelp.setEditable(false);
        jtxtCustTelp.setBackground(new java.awt.Color(255, 255, 255));
        jtxtCustTelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtCustTelpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtCustDepan)
                            .addComponent(jtxtCustTengah)
                            .addComponent(jtxtCustBelakang)
                            .addComponent(jtxtCustSurel)
                            .addComponent(jtxtCustTelp)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 19, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtCustHapus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtCustTambah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtCustSunting, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtxtCustTelp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jtxtCustDepan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jtxtCustTengah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtCustBelakang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtxtCustSurel))
                        .addGap(25, 25, 25)
                        .addComponent(jbtCustSunting, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtCustTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtCustHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Pelanggan", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tabelDriver.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelDriver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Telepon", "Plat Nomor", "Nama Depan", "Inisial Tengah", "Nama Belakang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelDriver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDriverMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelDriver);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Telepon:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Nama:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Plat Nomor:");

        jbtDriverSunting.setBackground(new java.awt.Color(255, 204, 0));
        jbtDriverSunting.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtDriverSunting.setForeground(new java.awt.Color(255, 255, 255));
        jbtDriverSunting.setText("SUNTING");
        jbtDriverSunting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDriverSuntingActionPerformed(evt);
            }
        });

        jbtDriverTambah.setBackground(new java.awt.Color(51, 255, 0));
        jbtDriverTambah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtDriverTambah.setForeground(new java.awt.Color(255, 255, 255));
        jbtDriverTambah.setText("TAMBAH");
        jbtDriverTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDriverTambahActionPerformed(evt);
            }
        });

        jbtDriverHapus.setBackground(new java.awt.Color(255, 0, 0));
        jbtDriverHapus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtDriverHapus.setForeground(new java.awt.Color(255, 255, 255));
        jbtDriverHapus.setText("HAPUS");
        jbtDriverHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDriverHapusActionPerformed(evt);
            }
        });

        jtxtDriverTelp.setEditable(false);
        jtxtDriverTelp.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtDriverPlat, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtDriverTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtDriverDepan, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtDriverTengah, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtDriverBelakang, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbtDriverSunting, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbtDriverHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtDriverTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtDriverTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtDriverPlat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtDriverDepan, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jtxtDriverTengah, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtDriverBelakang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtDriverSunting, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtDriverTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtDriverHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Driver", jPanel3);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tabelRestoran.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelRestoran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Tempat", "Alamat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelRestoran.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelRestoranMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelRestoran);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Nama Tempat:");

        jtxtRestoNama.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtxtRestoNama.setDragEnabled(true);
        jtxtRestoNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtRestoNamaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Alamat:");

        jtxtRestoAlamat.setColumns(20);
        jtxtRestoAlamat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtxtRestoAlamat.setRows(5);
        jScrollPane4.setViewportView(jtxtRestoAlamat);

        jbtRestoSunting.setBackground(new java.awt.Color(255, 204, 0));
        jbtRestoSunting.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtRestoSunting.setForeground(new java.awt.Color(255, 255, 255));
        jbtRestoSunting.setText("SUNTING");
        jbtRestoSunting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRestoSuntingActionPerformed(evt);
            }
        });

        jbtRestoTambah.setBackground(new java.awt.Color(51, 255, 0));
        jbtRestoTambah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtRestoTambah.setForeground(new java.awt.Color(255, 255, 255));
        jbtRestoTambah.setText("TAMBAH");
        jbtRestoTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRestoTambahActionPerformed(evt);
            }
        });

        jbtRestoHapus.setBackground(new java.awt.Color(255, 0, 0));
        jbtRestoHapus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtRestoHapus.setForeground(new java.awt.Color(255, 255, 255));
        jbtRestoHapus.setText("HAPUS");
        jbtRestoHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRestoHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jbtRestoHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtRestoTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtRestoSunting, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxtRestoNama, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtRestoNama, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtRestoSunting, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtRestoTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtRestoHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Restoran", jPanel1);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tabelProduk.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Deskripsi", "Kategori", "Harga", "Nama Tempat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelProduk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelProdukMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tabelProduk);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Deskripsi:");

        jtxtProdukDeskripsi.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jtxtProdukDeskripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtProdukDeskripsiActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Kategori:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Harga:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Nama Tempat:");

        jtxtProdukKategori.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jtxtProdukKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtProdukKategoriActionPerformed(evt);
            }
        });

        jtxtProdukHarga.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jtxtProdukHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtProdukHargaActionPerformed(evt);
            }
        });

        jtxtProdukNama.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jtxtProdukNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtProdukNamaActionPerformed(evt);
            }
        });

        jbtProdukSunting.setBackground(new java.awt.Color(255, 204, 0));
        jbtProdukSunting.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtProdukSunting.setForeground(new java.awt.Color(255, 255, 255));
        jbtProdukSunting.setText("SUNTING");
        jbtProdukSunting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProdukSuntingActionPerformed(evt);
            }
        });

        jbtProdukTambah.setBackground(new java.awt.Color(51, 255, 0));
        jbtProdukTambah.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtProdukTambah.setForeground(new java.awt.Color(255, 255, 255));
        jbtProdukTambah.setText("TAMBAH");
        jbtProdukTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProdukTambahActionPerformed(evt);
            }
        });

        jbtProdukHapus.setBackground(new java.awt.Color(255, 0, 0));
        jbtProdukHapus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbtProdukHapus.setForeground(new java.awt.Color(255, 255, 255));
        jbtProdukHapus.setText("HAPUS");
        jbtProdukHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProdukHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jbtProdukSunting, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(jbtProdukTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtProdukHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxtProdukDeskripsi, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(jtxtProdukKategori, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtProdukHarga, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtProdukNama, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtProdukDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtProdukKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtProdukHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtProdukNama, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtProdukSunting, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtProdukTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtProdukHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Produk", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tabelKategori.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelKategori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kategori"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelKategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelKategoriMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tabelKategori);

        jbtKategoriTambah.setBackground(new java.awt.Color(51, 255, 0));
        jbtKategoriTambah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtKategoriTambah.setForeground(new java.awt.Color(255, 255, 255));
        jbtKategoriTambah.setText("TAMBAH");
        jbtKategoriTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtKategoriTambahActionPerformed(evt);
            }
        });

        jbtKategoriHapus.setBackground(new java.awt.Color(255, 0, 0));
        jbtKategoriHapus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtKategoriHapus.setForeground(new java.awt.Color(255, 255, 255));
        jbtKategoriHapus.setText("HAPUS");
        jbtKategoriHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtKategoriHapusActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Nama Kategori:");

        jtxtKategoriKategori.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtxtKategoriKategori, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbtKategoriHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtKategoriTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)))
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtKategoriKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtKategoriTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jbtKategoriHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Kategori", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        tabelOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Waktu", "Alamat", "Telepon Pelanggan", "Id Driver", "Nama Tempat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelOrderMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tabelOrder);

        jLabel13.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        jLabel13.setText("Nama Tempat");

        jtxtOrderTempat.setEditable(false);
        jtxtOrderTempat.setBackground(new java.awt.Color(255, 255, 255));
        jtxtOrderTempat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtOrderTempatActionPerformed(evt);
            }
        });

        jbtOrderDelete.setBackground(new java.awt.Color(255, 0, 0));
        jbtOrderDelete.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jbtOrderDelete.setForeground(new java.awt.Color(255, 255, 255));
        jbtOrderDelete.setText("DELETE");
        jbtOrderDelete.setActionCommand("HAPUS");
        jbtOrderDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtOrderDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtOrderTempat)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 68, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jbtOrderDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtOrderTempat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jbtOrderDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(220, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Order", jPanel6);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jbtQuery1.setBackground(new java.awt.Color(51, 51, 255));
        jbtQuery1.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        jbtQuery1.setForeground(new java.awt.Color(255, 255, 255));
        jbtQuery1.setText("Query 1");
        jbtQuery1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtQuery1ActionPerformed(evt);
            }
        });

        jbtQuery2.setBackground(new java.awt.Color(0, 204, 204));
        jbtQuery2.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        jbtQuery2.setForeground(new java.awt.Color(255, 255, 255));
        jbtQuery2.setText("Query 2");
        jbtQuery2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtQuery2ActionPerformed(evt);
            }
        });

        jbtQuery3.setBackground(new java.awt.Color(0, 204, 204));
        jbtQuery3.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        jbtQuery3.setForeground(new java.awt.Color(255, 255, 255));
        jbtQuery3.setText("Query 3");
        jbtQuery3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtQuery3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtQuery3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtQuery2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtQuery1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(333, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jbtQuery1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jbtQuery2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jbtQuery3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Query", jPanel7);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jTabbedPane))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1562, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtCustHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCustHapusActionPerformed
        // TODO add your handling code here:
        if (!jtxtCustTelp.getText().equals("")) {
            try {
                Connection c = getConnection(url);
                PreparedStatement ps = c.prepareStatement("DELETE FROM pelanggan WHERE telepon_pelanggan = ?");
                // bisa ada method parseInt
                // Integer.parseInt(...)
                ps.setString(1, jtxtCustTelp.getText());
                ps.executeUpdate();
                isiDataPelanggan(c); // update
                JOptionPane.showMessageDialog(null, "Hapus Pelanggan " + jtxtCustTelp.getText() + " Berhasil!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mohon masukkan telepon pelanggan!");
        }
    }//GEN-LAST:event_jbtCustHapusActionPerformed

    private void jbtCustTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCustTambahActionPerformed
        // TODO add your handling code here:
        // periksa masukan dahulu
        if (periksaMasukanPelanggan()) {
            try {
                Connection c = getConnection(url);
                String query = "INSERT INTO pelanggan VALUES(?, ?, ?, ?, ?);";
                PreparedStatement ps = c.prepareStatement(query);

                ps.setString(1, jtxtCustTelp.getText());
                ps.setString(2, jtxtCustDepan.getText());
                ps.setString(3, jtxtCustTengah.getText());
                ps.setString(4, jtxtCustBelakang.getText());
                ps.setString(5, jtxtCustSurel.getText());

                ps.executeUpdate();
                isiDataPelanggan(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil dimasukan!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, jtxtCustTelp.getText(), "Duplikasi Pelanggan!", HEIGHT);
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
            jtxtCustTelp.setVisible(true);
        }
    }//GEN-LAST:event_jbtCustTambahActionPerformed

    private void jbtCustSuntingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCustSuntingActionPerformed
        // TODO add your handling code here:
        if (this.periksaMasukanPelanggan()) {
            String query = null;
            PreparedStatement ps = null;
            try {
                Connection c = getConnection(url);
                query = "UPDATE pelanggan SET nama_depan = ?, inisial_tengah = ?, nama_belakang = ?, surel = ? WHERE telepon_pelanggan = ?";
                ps = c.prepareStatement(query);
                ps = c.prepareStatement(query);

                ps.setString(1, jtxtCustDepan.getText());
                ps.setString(2, jtxtCustTengah.getText());
                ps.setString(3, jtxtCustBelakang.getText());
                ps.setString(4, jtxtCustSurel.getText());
                ps.setString(5, jtxtCustTelp.getText());
                ps.executeUpdate();
                isiDataPelanggan(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil disunting!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jbtCustSuntingActionPerformed

    private void jtxtCustTelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtCustTelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtCustTelpActionPerformed

    private void tabelPelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPelangganMouseClicked
        // TODO add your handling code here:
        int indeks = tabelPelanggan.getSelectedRow();
        try {
            this.lihatBarisPelanggan(indeks, this.getConnection(url));
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelPelangganMouseClicked

    private void tabelDriverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDriverMouseClicked
        // TODO add your handling code here:
        int indeks = tabelDriver.getSelectedRow();
        try {
            this.lihatBarisDriver(indeks, this.getConnection(url));
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelDriverMouseClicked

    private void jbtDriverSuntingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDriverSuntingActionPerformed
        // TODO add your handling code here:
        if (this.periksaMasukanDriver()) {
            String query = null;
            PreparedStatement ps = null;
            try {
                Connection c = getConnection(url);
                query = "UPDATE driver SET nama_depan = ?, inisial_tengah = ?, nama_belakang = ?, plat_nomor = ? WHERE telepon_driver = ?";
                ps = c.prepareStatement(query);

                ps.setString(1, jtxtDriverDepan.getText());
                ps.setString(2, jtxtDriverTengah.getText());
                ps.setString(3, jtxtDriverBelakang.getText());
                ps.setString(4, jtxtDriverPlat.getText());
                ps.setString(5, jtxtDriverTelp.getText());
                ps.executeUpdate();
                isiDataDriver(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil disunting!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jbtDriverSuntingActionPerformed

    private void jbtDriverTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDriverTambahActionPerformed
        // TODO add your handling code here:
        if (periksaMasukanDriver()) {
            try {
                Connection c = getConnection(url);
                String query = "INSERT INTO driver VALUES(?, ?, ?, ?, ?);";
                PreparedStatement ps = c.prepareStatement(query);

                ps.setString(1, jtxtDriverTelp.getText());
                ps.setString(2, jtxtDriverPlat.getText());
                ps.setString(3, jtxtDriverDepan.getText());
                ps.setString(4, jtxtDriverTengah.getText());
                ps.setString(5, jtxtDriverBelakang.getText());

                ps.executeUpdate();
                isiDataDriver(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil dimasukan!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, jtxtDriverTelp.getText(), "Duplikasi Driver!", HEIGHT);
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
            jtxtDriverTelp.setVisible(true);
        }
    }//GEN-LAST:event_jbtDriverTambahActionPerformed

    private void jbtDriverHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDriverHapusActionPerformed
        // TODO add your handling code here:
        if (!jtxtDriverTelp.getText().equals("")) {
            try {
                Connection c = getConnection(url);
                PreparedStatement ps = c.prepareStatement("DELETE FROM driver WHERE telepon_driver = ?");
                // bisa ada method parseInt
                // Integer.parseInt(...)
                ps.setString(1, jtxtDriverTelp.getText());
                ps.executeUpdate();
                isiDataDriver(c); // update
                JOptionPane.showMessageDialog(null, "Hapus Driver " + jtxtDriverTelp.getText() + " Berhasil!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mohon masukkan telepon driver!");
        }
    }//GEN-LAST:event_jbtDriverHapusActionPerformed

    private void jtxtRestoNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtRestoNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtRestoNamaActionPerformed

    private void tabelRestoranMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelRestoranMouseClicked
        // TODO add your handling code here:
        int indeks = tabelRestoran.getSelectedRow();
        try {
            this.lihatBarisRestoran(indeks, this.getConnection(url));
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelRestoranMouseClicked

    private void jbtRestoSuntingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRestoSuntingActionPerformed
        // TODO add your handling code here:
        if (this.periksaMasukanRestoran()) {
            String query = null;
            PreparedStatement ps = null;
            try {
                Connection c = getConnection(url);
                query = "UPDATE restoran SET alamat = ? WHERE nama_tempat = ?";
                ps = c.prepareStatement(query);
                ps = c.prepareStatement(query);

                ps.setString(1, jtxtRestoAlamat.getText());
                ps.setString(2, jtxtRestoNama.getText());
                ps.executeUpdate();
                isiDataRestoran(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil disunting!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbtRestoSuntingActionPerformed

    private void jbtRestoTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRestoTambahActionPerformed
        // TODO add your handling code here:
        if (periksaMasukanRestoran()) {
            try {
                Connection c = getConnection(url);
                String query = "INSERT INTO restoran VALUES(?, ?);";
                PreparedStatement ps = c.prepareStatement(query);

                ps.setString(1, jtxtRestoNama.getText());
                ps.setString(2, jtxtRestoAlamat.getText());

                ps.executeUpdate();
                isiDataRestoran(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil dimasukan!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, jtxtRestoNama.getText(), "Duplikasi Restoran!", HEIGHT);
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
            jtxtRestoNama.setVisible(true);
        }
    }//GEN-LAST:event_jbtRestoTambahActionPerformed

    private void jbtRestoHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRestoHapusActionPerformed
        // TODO add your handling code here:
        if (!jtxtRestoNama.getText().equals("")) {
            try {
                Connection c = getConnection(url);
                PreparedStatement ps = c.prepareStatement("DELETE FROM restoran WHERE nama_tempat = ?");
                // bisa ada method parseInt
                // Integer.parseInt(...)
                ps.setString(1, jtxtRestoNama.getText());
                ps.executeUpdate();
                isiDataRestoran(c); // update
                JOptionPane.showMessageDialog(null, "Hapus Restoran " + jtxtRestoNama.getText() + " Berhasil!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mohon masukkan nama restoran!");
        }
    }//GEN-LAST:event_jbtRestoHapusActionPerformed

    private void jtxtProdukDeskripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtProdukDeskripsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtProdukDeskripsiActionPerformed

    private void jtxtProdukKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtProdukKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtProdukKategoriActionPerformed

    private void jtxtProdukHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtProdukHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtProdukHargaActionPerformed

    private void jtxtProdukNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtProdukNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtProdukNamaActionPerformed

    private void tabelProdukMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelProdukMouseClicked
        // TODO add your handling code here:
        int indeks = tabelProduk.getSelectedRow();
        try {
            this.lihatBarisProduk(indeks, this.getConnection(url));
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelProdukMouseClicked

    private void jbtProdukSuntingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProdukSuntingActionPerformed
        // TODO add your handling code here:
        if (this.periksaMasukanProduk()) {
            String query = null;
            PreparedStatement ps = null;
            int indeks = tabelProduk.getSelectedRow();
            try {
                Connection c = getConnection(url);
                query = "UPDATE produk SET deskripsi = ?, kategori = ?, harga = ?, nama_tempat = ? WHERE id_produk = ?";
                ps = c.prepareStatement(query);
                ps = c.prepareStatement(query);

                ps.setString(1, jtxtProdukDeskripsi.getText());
                ps.setString(2, jtxtProdukKategori.getText());
                ps.setString(3, jtxtProdukHarga.getText());
                ps.setString(4, jtxtProdukNama.getText());
                ps.setString(5, this.getDaftarProduk(c).get(indeks).getId_produk());
                ps.executeUpdate();
                isiDataProduk(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil disunting!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jbtProdukSuntingActionPerformed

    private void jbtProdukTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProdukTambahActionPerformed
        // TODO add your handling code here:
        if (periksaMasukanProduk()) {
            try {
                Connection c = getConnection(url);
                String query = "INSERT INTO produk(deskripsi, kategori, harga, nama_tempat) VALUES(?, ?, ?, ?);";
                PreparedStatement ps = c.prepareStatement(query);

                ps.setString(1, jtxtProdukDeskripsi.getText());
                ps.setString(2, jtxtProdukKategori.getText());
                ps.setString(3, jtxtProdukHarga.getText());
                ps.setString(4, jtxtProdukNama.getText());

                ps.executeUpdate();
                isiDataProduk(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil dimasukan!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbtProdukTambahActionPerformed

    private void jbtProdukHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProdukHapusActionPerformed
        // TODO add your handling code here:
        if (!jtxtProdukDeskripsi.getText().equals("")) {
            try {
                Connection c = getConnection(url);
                PreparedStatement ps = c.prepareStatement("DELETE FROM produk WHERE deskripsi = ? and kategori = ? and nama_tempat = ?");
                // bisa ada method parseInt
                // Integer.parseInt(...)
                ps.setString(1, jtxtProdukDeskripsi.getText());
                ps.setString(2, jtxtProdukKategori.getText());
                ps.setString(3, jtxtProdukNama.getText());
                ps.executeUpdate();
                isiDataProduk(c); // update
                JOptionPane.showMessageDialog(null, "Hapus Produk " + " Berhasil!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mohon masukkan informasi produk!");
        }
    }//GEN-LAST:event_jbtProdukHapusActionPerformed

    private void tabelKategoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKategoriMouseClicked
        // TODO add your handling code here:
        int indeks = tabelKategori.getSelectedRow();
        try {
            this.lihatBarisKategori(indeks, this.getConnection(url));
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelKategoriMouseClicked

    private void jbtKategoriTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtKategoriTambahActionPerformed
        // TODO add your handling code here:
        if (periksaMasukanKategori()) {
            try {
                Connection c = getConnection(url);
                String query = "INSERT INTO kategori VALUES(?);";
                PreparedStatement ps = c.prepareStatement(query);

                ps.setString(1, jtxtKategoriKategori.getText());

                ps.executeUpdate();
                isiDataKategori(c); // update
                JOptionPane.showMessageDialog(null, "Data berhasil dimasukan!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbtKategoriTambahActionPerformed

    private void jbtKategoriHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtKategoriHapusActionPerformed
        // TODO add your handling code here:
        if (!jtxtKategoriKategori.getText().equals("")) {
            try {
                Connection c = getConnection(url);
                PreparedStatement ps = c.prepareStatement("DELETE FROM kategori WHERE nama_kategori = ?");
                // bisa ada method parseInt
                // Integer.parseInt(...)
                ps.setString(1, jtxtKategoriKategori.getText());
                ps.executeUpdate();
                isiDataKategori(c); // update
                JOptionPane.showMessageDialog(null, "Hapus Kategori " + " Berhasil!");
            } catch (SQLException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mohon masukkan informasi kategori!");
        }
    }//GEN-LAST:event_jbtKategoriHapusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        NakamLogin nL = new NakamLogin();
        nL.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtxtOrderTempatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtOrderTempatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtOrderTempatActionPerformed

    private void tabelOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelOrderMouseClicked
        // TODO add your handling code here:
        int indeks = tabelOrder.getSelectedRow();
        try {
            this.lihatBarisOrder(indeks, this.getConnection(url));
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelOrderMouseClicked

    private void jbtOrderDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtOrderDeleteActionPerformed
        // TODO add your handling code here:
        int indeks = tabelOrder.getSelectedRow();
        try {
            Connection c = getConnection(url);
            PreparedStatement ps = c.prepareStatement("DELETE FROM pesanan WHERE id_pemesanan = ?");
            // bisa ada method parseInt
            // Integer.parseInt(...)
            ps.setString(1, this.getDaftarOrder(c).get(indeks).getId_pemesanan());
            ps.executeUpdate();
            isiDataOrder(c); // update
            JOptionPane.showMessageDialog(null, "Hapus Pesanan " + " Berhasil!");
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NakamAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtOrderDeleteActionPerformed

    private void jbtQuery2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtQuery2ActionPerformed
        // TODO add your handling code here:
        Query2 info = new Query2();
        info.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtQuery2ActionPerformed

    private void jbtQuery1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtQuery1ActionPerformed
        // TODO add your handling code here:
        Query1 info = new Query1();
        info.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtQuery1ActionPerformed

    private void jbtQuery3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtQuery3ActionPerformed
        Query3 info = new Query3();
        info.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtQuery3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NakamAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NakamAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NakamAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NakamAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Connection conn = null;
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NakamAdmin().setVisible(true);
            }
        });
    }

    public Connection getConnection(String url)
            throws SQLException, ClassNotFoundException {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(url);
            return conn;

        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class
                    .getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Koneksi Gagal!");
            return null;
        }
    }

//    public void statementQuery(Connection conn) throws SQLException {
//        Statement st = conn.createStatement();
//        ResultSet rs = st.executeQuery("SELECT m.NIM, m.NAMA, n.Nilai "
//                + "FROM Mahasiswa m "
//                + "JOIN Nilai n ON m.NIM=n.NIM");
//
//        System.out.printf("%s%s%s\n", "+", "=".repeat(60), "+");
//        System.out.printf("|  %-18s|  %-27s |  %-5s |\n",
//                "NIM", "NAMA", "NILAI");
//        System.out.printf("%s%s%s\n", "+", "=".repeat(60), "+");
//        while (rs.next()) {
//            String nim = rs.getString(1);
//            String nama = rs.getString(2);
//            Float nilai = rs.getFloat(3);
//            System.out.printf("|  %-18s|  %-27s |  %-5s |\n",
//                    nim, nama, nilai);
//        }
//        System.out.printf("%s%s%s\n", "+", "=".repeat(60), "+");
//    }
    // populate user ke array list
    public ArrayList<Pelanggan> getDaftarPelanggan(Connection conn) {
        ArrayList<Pelanggan> pelList = new ArrayList<>();
        try {
            String query = "SELECT * FROM pelanggan p WHERE p.telepon_pelanggan NOT LIKE 'admin'";

            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            Pelanggan pel;
            while (rs.next()) {
                pel = new Pelanggan(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5));
                pelList.add(pel);

            }
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return pelList;
    }

    public ArrayList<Driver> getDaftarDriver(Connection conn) {
        ArrayList<Driver> driList = new ArrayList<>();
        try {
            String query = "SELECT telepon_driver, plat_nomor, nama_depan, inisial_tengah, nama_belakang FROM driver d WHERE d.telepon_driver NOT LIKE 'admin'";

            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            Driver dri;
            while (rs.next()) {
                dri = new Driver(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5));
                driList.add(dri);

            }
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return driList;
    }

    public ArrayList<Restoran> getDaftarRestoran(Connection conn) {
        ArrayList<Restoran> resList = new ArrayList<>();
        try {
            String query = "SELECT * FROM restoran";

            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            Restoran res;
            while (rs.next()) {
                res = new Restoran(rs.getString(1), rs.getString(2));
                resList.add(res);

            }
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return resList;
    }

    public ArrayList<Produk> getDaftarProduk(Connection conn) {
        ArrayList<Produk> proList = new ArrayList<>();
        try {
            String query = "SELECT * FROM produk";

            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            Produk pro;
            while (rs.next()) {
                pro = new Produk(rs.getString(1), rs.getString(2), rs.getString(3), rs.getDouble(4), rs.getString(5));
                proList.add(pro);

            }
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return proList;
    }

    public ArrayList<Kategori> getDaftarKategori(Connection conn) {
        ArrayList<Kategori> katList = new ArrayList<>();
        try {
            String query = "SELECT * FROM kategori";

            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            Kategori kat;
            while (rs.next()) {
                kat = new Kategori(rs.getString(1));
                katList.add(kat);

            }
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return katList;
    }

    public ArrayList<Order> getDaftarOrder(Connection conn) {
        ArrayList<Order> ordList = new ArrayList<>();
        try {
            String query = "SELECT * FROM pesanan";

            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            Order ord;
            while (rs.next()) {
                ord = new Order(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6));
                ordList.add(ord);

            }
        } catch (SQLException ex) {
            Logger.getLogger(NakamAdmin.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return ordList;
    }

    public void isiDataPelanggan(Connection conn) {
        ArrayList<Pelanggan> pelList = getDaftarPelanggan(conn);
        DefaultTableModel model = (DefaultTableModel) tabelPelanggan.getModel();
        //clear jtable
        model.setRowCount(0);
        Object[] row = new Object[5]; // 5 sesuai kolom
        for (int i = 0; i < pelList.size(); i++) {  // perulangan mengisi setiap row
            row[0] = pelList.get(i).getTelp();  // isi kolom 1
            row[1] = pelList.get(i).getNamaD(); // isi kolom 2
            row[2] = pelList.get(i).getNamaT();// dst...
            row[3] = pelList.get(i).getNamaB();
            row[4] = pelList.get(i).getSurel();
            model.addRow(row);
        }
    }

    public void isiDataDriver(Connection conn) {
        ArrayList<Driver> driList = getDaftarDriver(conn);
        DefaultTableModel model = (DefaultTableModel) tabelDriver.getModel();
        //clear jtable
        model.setRowCount(0);
        Object[] row = new Object[5]; // 5 sesuai kolom
        for (int i = 0; i < driList.size(); i++) {  // perulangan mengisi setiap row
            row[0] = driList.get(i).getTelp();  // isi kolom 1
            row[1] = driList.get(i).getPlat();
            row[2] = driList.get(i).getNamaD(); // isi kolom 3
            row[3] = driList.get(i).getNamaT();// dst...
            row[4] = driList.get(i).getNamaB();
            model.addRow(row);
        }
    }

    public void isiDataRestoran(Connection conn) {
        ArrayList<Restoran> resList = getDaftarRestoran(conn);
        DefaultTableModel model = (DefaultTableModel) tabelRestoran.getModel();
        //clear jtable
        model.setRowCount(0);
        Object[] row = new Object[5]; // 5 sesuai kolom
        for (int i = 0; i < resList.size(); i++) {  // perulangan mengisi setiap row
            row[0] = resList.get(i).getNama_tempat();  // isi kolom 1
            row[1] = resList.get(i).getAlamat();
            model.addRow(row);
        }
    }

    public void isiDataProduk(Connection conn) {
        ArrayList<Produk> proList = getDaftarProduk(conn);
        DefaultTableModel model = (DefaultTableModel) tabelProduk.getModel();
        //clear jtable
        model.setRowCount(0);
        Object[] row = new Object[5]; // 5 sesuai kolom
        for (int i = 0; i < proList.size(); i++) {  // perulangan mengisi setiap row
            row[0] = proList.get(i).getDeskripsi();  // isi kolom 1
            row[1] = proList.get(i).getKategori();
            row[2] = proList.get(i).getHarga(); // isi kolom 3
            row[3] = proList.get(i).getNama_tempat();// dst...
            model.addRow(row);
        }
    }

    public void isiDataKategori(Connection conn) {
        ArrayList<Kategori> katList = getDaftarKategori(conn);
        DefaultTableModel model = (DefaultTableModel) tabelKategori.getModel();
        //clear jtable
        model.setRowCount(0);
        Object[] row = new Object[1]; // sesuai kolom
        for (int i = 0; i < katList.size(); i++) {  // perulangan mengisi setiap row
            row[0] = katList.get(i).getKategori();  // isi kolom 1
            model.addRow(row);
        }
    }

    public void isiDataOrder(Connection conn) {
        ArrayList<Order> ordList = getDaftarOrder(conn);
        DefaultTableModel model = (DefaultTableModel) tabelOrder.getModel();
        //clear jtable
        model.setRowCount(0);
        Object[] row = new Object[5]; // sesuai kolom
        for (int i = 0; i < ordList.size(); i++) {  // perulangan mengisi setiap row
            row[0] = ordList.get(i).getWaktu();  // isi kolom 1
            row[1] = ordList.get(i).getAlamat();
            row[2] = ordList.get(i).getTelepon(); // isi kolom 3
            row[3] = ordList.get(i).getId_driver();// dst...
            row[4] = ordList.get(i).getTempat();
            model.addRow(row);
        }
    }

    public void lihatBarisOrder(int indeks, Connection conn) {
        jtxtOrderTempat.setText(this.getDaftarOrder(conn).get(indeks).getTempat());
    }

    public void lihatBarisKategori(int indeks, Connection conn) {
        jtxtKategoriKategori.setText(this.getDaftarKategori(conn).get(indeks).getKategori());
    }

    public void lihatBarisProduk(int indeks, Connection conn) {
        jtxtProdukDeskripsi.setText(this.getDaftarProduk(conn).get(indeks).getDeskripsi());
        jtxtProdukKategori.setText(this.getDaftarProduk(conn).get(indeks).getKategori());
        String s = Double.toString(this.getDaftarProduk(conn).get(indeks).getHarga());
        jtxtProdukHarga.setText(s);
        jtxtProdukNama.setText(this.getDaftarProduk(conn).get(indeks).getNama_tempat());
    }

    public void lihatBarisRestoran(int indeks, Connection conn) {
        jtxtRestoNama.setText(this.getDaftarRestoran(conn).get(indeks).getNama_tempat());
        jtxtRestoAlamat.setText(this.getDaftarRestoran(conn).get(indeks).getAlamat());
    }

    public void lihatBarisDriver(int indeks, Connection conn) {
        jtxtDriverTelp.setText(this.getDaftarDriver(conn).get(indeks).getTelp());
        jtxtDriverPlat.setText(this.getDaftarDriver(conn).get(indeks).getPlat());
        jtxtDriverDepan.setText(this.getDaftarDriver(conn).get(indeks).getNamaD());
        jtxtDriverTengah.setText(this.getDaftarDriver(conn).get(indeks).getNamaT());
        jtxtDriverBelakang.setText(this.getDaftarDriver(conn).get(indeks).getNamaB());
    }

    public void lihatBarisPelanggan(int indeks, Connection conn) {
        jtxtCustTelp.setText(this.getDaftarPelanggan(conn).get(indeks).getTelp());
        jtxtCustDepan.setText(this.getDaftarPelanggan(conn).get(indeks).getNamaD());
        jtxtCustTengah.setText(this.getDaftarPelanggan(conn).get(indeks).getNamaT());
        jtxtCustBelakang.setText(this.getDaftarPelanggan(conn).get(indeks).getNamaB());
        jtxtCustSurel.setText(this.getDaftarPelanggan(conn).get(indeks).getSurel());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JButton jbtCustHapus;
    private javax.swing.JButton jbtCustSunting;
    private javax.swing.JButton jbtCustTambah;
    private javax.swing.JButton jbtDriverHapus;
    private javax.swing.JButton jbtDriverSunting;
    private javax.swing.JButton jbtDriverTambah;
    private javax.swing.JButton jbtKategoriHapus;
    private javax.swing.JButton jbtKategoriTambah;
    private javax.swing.JButton jbtOrderDelete;
    private javax.swing.JButton jbtProdukHapus;
    private javax.swing.JButton jbtProdukSunting;
    private javax.swing.JButton jbtProdukTambah;
    private javax.swing.JButton jbtQuery1;
    private javax.swing.JButton jbtQuery2;
    private javax.swing.JButton jbtQuery3;
    private javax.swing.JButton jbtRestoHapus;
    private javax.swing.JButton jbtRestoSunting;
    private javax.swing.JButton jbtRestoTambah;
    private javax.swing.JTextField jtxtCustBelakang;
    private javax.swing.JTextField jtxtCustDepan;
    private javax.swing.JTextField jtxtCustSurel;
    private javax.swing.JTextField jtxtCustTelp;
    private javax.swing.JTextField jtxtCustTengah;
    private javax.swing.JTextField jtxtDriverBelakang;
    private javax.swing.JTextField jtxtDriverDepan;
    private javax.swing.JTextField jtxtDriverPlat;
    private javax.swing.JTextField jtxtDriverTelp;
    private javax.swing.JTextField jtxtDriverTengah;
    private javax.swing.JTextField jtxtKategoriKategori;
    private javax.swing.JTextField jtxtOrderTempat;
    private javax.swing.JTextField jtxtProdukDeskripsi;
    private javax.swing.JTextField jtxtProdukHarga;
    private javax.swing.JTextField jtxtProdukKategori;
    private javax.swing.JTextField jtxtProdukNama;
    private javax.swing.JTextArea jtxtRestoAlamat;
    private javax.swing.JTextField jtxtRestoNama;
    private javax.swing.JTable tabelDriver;
    private javax.swing.JTable tabelKategori;
    private javax.swing.JTable tabelOrder;
    private javax.swing.JTable tabelPelanggan;
    private javax.swing.JTable tabelProduk;
    private javax.swing.JTable tabelRestoran;
    // End of variables declaration//GEN-END:variables
}
